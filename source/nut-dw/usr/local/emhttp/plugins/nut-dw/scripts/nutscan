#!/bin/bash
#
# Copyright Derek Macias
# Copyright macester
# Copyright gfjardim
# Copyright SimonF
# Copyright desertwitch
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License 2
# as published by the Free Software Foundation.
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#

CONFIG="/boot/config/plugins/nut-dw/nut-dw.cfg"
SCANFAILED="no"
echo "-----------------------------------------------------"
echo "INFO: The NUT Scanner is also available from the terminal with more advanced settings."
echo "INFO: You can use 'nut-scanner -h' to see all available options for searching UPS devices."
echo "-----------------------------------------------------"
echo ""

echo "Making sure all existing NUT services are stopped (before UPS scanning)..."
if [ -x /etc/rc.d/rc.nut ]; then
    /etc/rc.d/rc.nut stop 1>/dev/null
fi

echo "Reading the existing NUT configuration..."
[ -e "$CONFIG" ] && source $CONFIG 2>&1

echo "Reading the system network configuration..."

# shellcheck disable=SC1091
[ -e "/boot/config/network.cfg" ] && source <(fromdos <"/boot/config/network.cfg") 2>&1

# shellcheck disable=SC2001
if [ -n "${IPADDR[0]}" ] && [[ "${IPADDR[0]}" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    SNMPSTART=$(sed 's:[^.]*$:1:' 2>/dev/null <<< "${IPADDR[0]}")
    SNMPEND=$(sed 's:[^.]*$:255:' 2>/dev/null <<< "${IPADDR[0]}")
    echo "Also scanning for SNMP devices on detected IP range: ${SNMPSTART} - ${SNMPEND} ..."
fi

echo ""
echo "NUT Scanner is now searching for UPS devices..."
echo "#####################################################"
echo ""

if [[ "$SNMPSTART" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]] && [[ "$SNMPEND" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    SCANRESULT=$(/usr/bin/nut-scanner -U -N -S -s "$SNMPSTART" -e "$SNMPEND" 2>/dev/null)
else
    SCANRESULT=$(/usr/bin/nut-scanner -U -N 2>/dev/null)
fi

if [ -z "$SCANRESULT" ]; then
    echo "NO DEVICES FOUND"
    SCANFAILED="yes"
else
    echo "${SCANRESULT}"
    echo "${SCANRESULT}" > /etc/nut/ups.conf
fi

echo ""
echo "#####################################################"
echo ""

if [ "$SCANFAILED" == "no" ]; then
    echo "Adjusting the NUT configuration for the found UPS..."
    sed -i "1 s/^.*$/\[${NAME}\]/" /etc/nut/ups.conf 2>&1

    if [ "$MANUAL" == "disable" ]; then
        echo "Setting the manual configuration mode ('for UPS Driver') in GUI..."
        sed -i '/MANUAL=/c\MANUAL="onlyups"' $CONFIG 2>&1
    fi

    echo "Writing the modified NUT configuration to the respective locations..."
    if [ -x /etc/rc.d/rc.nut ]; then
        /etc/rc.d/rc.nut write_config 1>/dev/null
    fi

    echo ""
    echo "NUT Scanner has finished configuring NUT - please attempt to start your NUT services now."
    echo "If multiple UPS were detected, remove any unneeded UPS sections from UPS.CONF using the GUI configuration editor first."
else
    echo "NUT Scanner has finished without configuring NUT - no settings were changed."
    echo ""
    echo "Please check out the 'Driver Guide' / HCL for our supported UPS and their configurations."
    echo "You can also consult with other users on the UNRAID forums - do visit our relevant 'Support Thread'."
    echo "Sometimes switching the NUT backend can prove helpful for UPS detection (but consider this as a last resort)."
fi
