Menu="Buttons:199"
Link="nav-user"
---
<?
/* Copyright Derek Macias (parts of code from NUT package)
 * Copyright macester (parts of code from NUT package)
 * Copyright gfjardim (parts of code from NUT package)
 * Copyright SimonF (parts of code from NUT package)
 * Copyright Dan Landon (parts of code from Web GUI)
 * Copyright Bergware International (parts of code from Web GUI)
 * Copyright Lime Technology (any and all other parts of Unraid)
 *
 * Copyright desertwitch (as author and maintainer of this file)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License 2
 * as published by the Free Software Foundation.
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 */
?>
<?require_once '/usr/local/emhttp/plugins/nut-dw/include/nut_config.php';?>
<? $update_dash = ($nut_refresh == "enable" ? true : false); ?>
<?if ($nut_footer == "enable" && $nut_running):?>

<style type="text/css">
@keyframes battery-charging {
  0% { content: "\f244"; }
  20% { content: "\f243"; }
  40% { content: "\f242"; }
  60% { content: "\f241"; }
  80% { content: "\f240"; }
}
.fa-battery-charging:before {
  content: "\f244";
  animation: 2s battery-charging infinite;
}
@keyframes battery-discharging {
  0% { content: "\f240"; }
  20% { content: "\f241"; }
  40% { content: "\f242"; }
  60% { content: "\f243"; }
  80% { content: "\f244"; }
}
.fa-battery-discharging:before {
  content: "\f240";
  animation: 2s battery-discharging infinite;
}
@keyframes fa-blink {
  0% { opacity: 1; }
  50% { opacity: 0; }
}
.fa-blink {
  animation: fa-blink .6s linear infinite;
}
@keyframes ring{
  0%{-webkit-transform:rotate(-15deg);transform:rotate(-15deg)}
  2%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}
  4%{-webkit-transform:rotate(-18deg);transform:rotate(-18deg)}
  6%{-webkit-transform:rotate(18deg);transform:rotate(18deg)}
  8%{-webkit-transform:rotate(-22deg);transform:rotate(-22deg)}
  10%{-webkit-transform:rotate(22deg);transform:rotate(22deg)}
  12%{-webkit-transform:rotate(-18deg);transform:rotate(-18deg)}
  14%{-webkit-transform:rotate(18deg);transform:rotate(18deg)}
  16%{-webkit-transform:rotate(-12deg);transform:rotate(-12deg)}
  18%{-webkit-transform:rotate(12deg);transform:rotate(12deg)}
  100%,20%{-webkit-transform:rotate(0);transform:rotate(0)}
}
.faa-parent.animated-hover:hover>.faa-ring,.faa-ring.animated,.faa-ring.animated-hover:hover{
  -webkit-animation:ring 2s ease infinite;
  animation:ring 2s ease infinite;
  transform-origin-x:50%;
  transform-origin-y:0;
  transform-origin-z:initial
}
.faa-parent.animated-hover:hover>.faa-ring.faa-fast,.faa-ring.animated-hover.faa-fast:hover,.faa-ring.animated.faa-fast{
  -webkit-animation:ring 1s ease infinite;
  animation:ring 1s ease infinite
}
.faa-parent.animated-hover:hover>.faa-ring.faa-slow,.faa-ring.animated-hover.faa-slow:hover,.faa-ring.animated.faa-slow{
  -webkit-animation:ring 3s ease infinite;
  animation:ring 3s ease infinite
}
#nut_footer {
  float: right;
  margin-right: 6px;
}
#nut_footer.minimal {
  font-family: bitstream;
  font-size: 1.1rem;
  padding-right: 10px;
}
</style>
<script type="text/javascript">
  function getNUTfooter() {
    $.get('/plugins/nut-dw/include/nut_footer.php',function(data) {
      if (data && data.success && data.success.response) {
        animed = $("#nut_footer").find("i[class^='fa fa-battery-discharging'], i[class^='fa fa-battery-charging']");
        hovered = $( ".tooltip-nut:hover" ).map(function(){return this.id;}).get();
        if (animed.length > 0) {
          animed.one('animationiteration webkitAnimationIteration', function(e) {
            $.each(hovered, function(k,v){ if(v.length) { $("#"+v).trigger("mouseenter");} });
            $('#nut_footer').html(data.success.response);
          });
        } else {
          $('#nut_footer').html(data.success.response);
        }
        $.each(hovered, function(k,v){ if(v.length) { $("#"+v).trigger("mouseenter");} });
      } else {
        $("#nut_footer").html("<i class='fa fa-times-circle' style='color:red;' title='NUT: Error (check logs)'></i>");
      }
    }, 'json');
    clearTimeout(timers.getNUTfooter);
    <?if ($update_dash):?>
    timers.getNUTfooter = setTimeout(getNUTfooter, <?=max(abs(isset($display['refresh']) ? $display['refresh'] : 0),($nut_interval * 1000))?>);
    <?endif;?>
  }

  $(function()
    {
      var footer = $("<span id='nut_footer'></span>").insertAfter("div#footer > span#copyright");
      <?if ($nut_footer_style == 1): ?>
        footer.addClass('minimal');
      <?endif;?>
      getNUTfooter();
      $('body').on('mouseenter', '.tooltip-nut', function()
      {
        if (!$(this).hasClass("tooltipstered"))
        {
          $(this).tooltipster({
            delay:100,
            zIndex:999,
            trigger:'custom',
            interactive: true,
            contentAsHTML: true,
            triggerOpen:{mouseenter:true, touchstart:true},
            triggerClose:{click:false, scroll:true, mouseleave:true, tap:true},
            functionBefore: function(instance, helper)
            {
              instance.content($(helper.origin).attr("data"));
            }
          }).tooltipster('open');
        }
      });
    }
  );
</script>
<?endif;?>

<?if(version_compare(parse_ini_file('/etc/unraid-version')['version'],'6.12.0-beta5', '>')):?>
<?if(stripos($path, "dashboard") !== false && $nut_running):?>
<?
$pluginname = "UPS(NUT)";

$mytiles[$pluginname]['column2'] =
<<<EOT
<tbody id="tblUPSNUTDash" title="_(UPS(NUT))_">
<tr><td>
<i class="icon-ups f32"></i>
<div class="section">_(UPS(NUT))_<br><span><span style="margin-right:6px;">Status: <i class="nutdsicon fa fa-question-circle black-text"></i></span><span style="margin-right:6px;">Battery: <span class="nutdcc green-text"><i class="fa fa-spinner fa-spin icon" style="color:black;"></i></span></span><span>Load: <span class="nut_loadpct"><i class="fa fa-spinner fa-spin icon"></i></span></span></span>
<br><br>
</div>
<a href="/Dashboard/NUTsettings" title="_(Go to NUT Settings)_"><i class="fa fa-fw fa-cog control"></i></a>
</td></tr>
<tr><td style="display: flex;"><span class="w36 ups">UPS Status:</span><span class="nut_status" style="flex: 1; white-space: normal;"></span></td></tr>
<tr><td><span class="w36 ups">Battery Charge:</span><span class="nut_bcharge"><i class="fa fa-spinner fa-spin"></i> <em>Please wait, retrieving UPS information...</em></span></td></tr>
<tr><td><span class="w36 ups">Runtime Left:</span><span class="nut_timeleft"><i class="fa fa-spinner fa-spin"></i> <em>Please wait, retrieving UPS information...</em></span></td></tr>
<tr><td><span class="w36 ups">Nominal Power:</span><span class="nut_nompower"><i class="fa fa-spinner fa-spin"></i> <em>Please wait, retrieving UPS information...</em></span></td></tr>
</tbody>
EOT;
?>
<script type="text/javascript">
  function updateNUTDashboard() {
    $.get('/plugins/nut-dw/include/nut_status.php',{all:'false'},function(data) {
      if (data && data.success && data.success.response) {
        datax = data.success.response.replace(/<\/?tr>/g,'').replace(/<td/g,'<span').replace(/td>/g,'span>').split('</span>');
        $("#tblUPSNUTDash").find('.nut_status').html(datax[0]);
        $("#tblUPSNUTDash").find('.nut_bcharge').html(datax[1]);
        $("#tblUPSNUTDash").find('.nut_timeleft').html(datax[2]);
        $("#tblUPSNUTDash").find('.nut_nompower').html(datax[3]);
        $("#tblUPSNUTDash").find('.nut_loadpct').html(datax[5]+' - '+datax[4]);

        upsstatus = $("#tblUPSNUTDash").find('.nut_status').text();
        if(datax[0].includes("red-text")) {
          $(".nutdsicon").attr("class","nutdsicon fa fa-exclamation-circle red-text");
          $(".nutdsicon").attr("title",upsstatus);
        } else if(datax[0].includes("orange-text")) {
          $(".nutdsicon").attr("class","nutdsicon fa fa-exclamation-circle orange-text");
          $(".nutdsicon").attr("title",upsstatus);
        } else if(datax[0].includes("green-text")) {
          $(".nutdsicon").attr("class","nutdsicon fa fa-check-circle green-text");
          $(".nutdsicon").attr("title",upsstatus);
        } else {
          $(".nutdsicon").attr("class", "nutdsicon fa fa-question-circle black-text");
          if(upsstatus) {
            $(".nutdsicon").attr("title",upsstatus);
          } else {
            $(".nutdsicon").attr("title","Unknown Status");
          }
        }
        batterycharge = $("#tblUPSNUTDash").find('.nut_bcharge').text();
        if(datax[1].includes("red-text")) {
          $(".nutdcc").attr("class","nutdcc red-text");
        } else if(datax[1].includes("orange-text")) {
          $(".nutdcc").attr("class","nutdcc orange-text");
        } else if(datax[1].includes("green-text")) {
          $(".nutdcc").attr("class","nutdcc green-text");
        } else {
          $(".nutdcc").attr("class","nutdcc black-text");
        }
        if(batterycharge) {
          $(".nutdcc").text(batterycharge);
        } else {
          $(".nutdcc").text("-");
        }
        if (typeof $.fn.tooltipster === 'function') {
            $(".nutdsicon").tooltipster();
        }
      } else {
        $(".nutdsicon").attr("class","nutdsicon fa fa-times-circle red-text");
        $(".nutdsicon").attr("title","Error (check logs)");
        $(".nutdcc").html("<i class='fa fa-times-circle' style='color:red;'></i>");
        $("#tblUPSNUTDash").find('.nut_status').html("<i class='fa fa-times-circle' style='color:red;'></i> <em>Error (check logs)</em>");
        $("#tblUPSNUTDash").find('.nut_bcharge').html("<i class='fa fa-times-circle' style='color:red;'></i> <em>Error (check logs)</em>");
        $("#tblUPSNUTDash").find('.nut_timeleft').html("<i class='fa fa-times-circle' style='color:red;'></i> <em>Error (check logs)</em>");
        $("#tblUPSNUTDash").find('.nut_nompower').html("<i class='fa fa-times-circle' style='color:red;'></i> <em>Error (check logs)</em>");
        $("#tblUPSNUTDash").find('.nut_loadpct').html("<i class='fa fa-times-circle' style='color:red;'></i>");
      }
    }, 'json');
    clearTimeout(updateNUTDashboard);
    <?if ($update_dash):?>
    timers.updateNUTDashboard = setTimeout(updateNUTDashboard, <?=max(abs(isset($display['refresh']) ? $display['refresh'] : 0),($nut_interval * 1000))?>);
    <?endif;?>
}

$(function(){
  updateNUTDashboard();
});
</script>
<?endif;?>
<?endif;?>

<?if(version_compare(parse_ini_file('/etc/unraid-version')['version'],'6.12.0-beta6', '<')):?>
<?if(stripos($path, "dashboard") !== false && $nut_running):?>
<table id="nut_dashboard" style="display: none;">
<thead sort=''><tr class='hidden'><td></td><td colspan='3'></td><td></td></tr></thead>
<tbody sort='' class='sortable'>
<tr><td></td><td colspan='3' class='next'><i class='icon-ups'></i><div class='section'>UPS(NUT)<br>
<span style="margin-right:6px;">Status: <i class="nutdsicon fa fa-question-circle black-text"></i></span>
<span style="margin-right:6px;">Battery: <span class="nutdcc green-text"><i class="fa fa-spinner fa-spin icon" style="color:black;"></i></span></span>
<span>Load: <span class='nut_loadpct'><i class="fa fa-spinner fa-spin icon"></i></span></span><br><br></div>
<i class='fa fa-fw chevron' id='nut_view' onclick='toggleChevron("nut_view",0)'></i>
<a href='/Dashboard/NUTsettings' title='Go to NUT Settings'><i class='fa fa-fw fa-cog chevron'></i></a>
</td><td></td></tr>
<tr class='nut_view' style="display:none"><td></td><td colspan='3'>
<span class='ups'>UPS Status:</span><span class='nut_status'><i class="fa fa-spinner fa-spin"></i> <em>Please wait, retrieving UPS information...</em></span><br>
<span class='ups'>Battery Charge:</span><span class='nut_bcharge'><i class="fa fa-spinner fa-spin"></i> <em>Please wait, retrieving UPS information...</em></span><br>
<span class='ups'>Runtime Left:</span><span class='nut_timeleft'><i class="fa fa-spinner fa-spin"></i> <em>Please wait, retrieving UPS information...</em></span><br>
<span class='ups'>Nominal Power:</span><span class='nut_nompower'><i class="fa fa-spinner fa-spin"></i> <em>Please wait, retrieving UPS information...</em></span><br>
</td><td></td></tr>
</tbody>
</table>
<script type="text/javascript">
  function getNUTDashboard() {
    $.get('/plugins/nut-dw/include/nut_status.php',{all:'false'},function(data) {
      if (data && data.success && data.success.response) {
        datax = data.success.response.replace(/<\/?tr>/g,'').replace(/<td/g,'<span').replace(/td>/g,'span>').split('</span>');
        $("#db-box1").find('.nut_status').html(datax[0]);
        $("#db-box1").find('.nut_bcharge').html(datax[1]);
        $("#db-box1").find('.nut_timeleft').html(datax[2]);
        $("#db-box1").find('.nut_nompower').html(datax[3]);
        $("#db-box1").find('.nut_loadpct').html(datax[5]+' - '+datax[4]);

        upsstatus = $("#db-box1").find('.nut_status').text();
        if(datax[0].includes("red-text")) {
          $(".nutdsicon").attr("class","nutdsicon fa fa-exclamation-circle red-text");
          $(".nutdsicon").attr("title",upsstatus);
        } else if(datax[0].includes("orange-text")) {
          $(".nutdsicon").attr("class","nutdsicon fa fa-exclamation-circle orange-text");
          $(".nutdsicon").attr("title",upsstatus);
        } else if(datax[0].includes("green-text")) {
          $(".nutdsicon").attr("class","nutdsicon fa fa-check-circle green-text");
          $(".nutdsicon").attr("title",upsstatus);
        } else {
          $(".nutdsicon").attr("class", "nutdsicon fa fa-question-circle black-text");
          if(upsstatus) {
            $(".nutdsicon").attr("title",upsstatus);
          } else {
            $(".nutdsicon").attr("title","Unknown Status");
          }
        }
        batterycharge = $("#db-box1").find('.nut_bcharge').text();
        if(datax[1].includes("red-text")) {
          $(".nutdcc").attr("class","nutdcc red-text");
        } else if(datax[1].includes("orange-text")) {
          $(".nutdcc").attr("class","nutdcc orange-text");
        } else if(datax[1].includes("green-text")) {
          $(".nutdcc").attr("class","nutdcc green-text");
        } else {
          $(".nutdcc").attr("class","nutdcc black-text");
        }
        if(batterycharge) {
          $(".nutdcc").text(batterycharge);
        } else {
          $(".nutdcc").text("-");
        }
      } else {
        $(".nutdsicon").attr("class","nutdsicon fa fa-times-circle red-text");
        $(".nutdsicon").attr("title","Error (check logs)");
        $(".nutdcc").html("<i class='fa fa-times-circle' style='color:red;'></i>");
        $("#db-box1").find('.nut_status').html("<i class='fa fa-times-circle' style='color:red;'></i> <em>Error (check logs)</em>");
        $("#db-box1").find('.nut_bcharge').html("<i class='fa fa-times-circle' style='color:red;'></i> <em>Error (check logs)</em>");
        $("#db-box1").find('.nut_timeleft').html("<i class='fa fa-times-circle' style='color:red;'></i> <em>Error (check logs)</em>");
        $("#db-box1").find('.nut_nompower').html("<i class='fa fa-times-circle' style='color:red;'></i> <em>Error (check logs)</em>");
        $("#db-box1").find('.nut_loadpct').html("<i class='fa fa-times-circle' style='color:red;'></i>");
      }
    }, 'json');
    clearTimeout(timers.getNUTDashboard);
    <?if ($update_dash):?>
    timers.getNUTDashboard = setTimeout(getNUTDashboard, <?=max(abs(isset($display['refresh']) ? $display['refresh'] : 0),($nut_interval * 1000))?>);
    <?endif;?>
  }

  function addNUTDashboard() {
    if ($("#db-box1").length) {
      var i = $("#db-box1 > tbody.sortable").length;
      nut_dashboard = $("#nut_dashboard").detach();
      nut_dashboard.find("thead, tbody").attr("sort",i);
      nut_dashboard.find("thead, tbody").appendTo('#db-box1');
      toggleView('nut_view',true);
      sortTable($('#db-box1'),$.cookie('db-box1'));
      getNUTDashboard();
    }
  }
  $(function(){
    addNUTDashboard();
  });
</script>
<?endif;?>
<?endif;?>
